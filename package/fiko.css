@charset "UTF-8";
/*!
* FIKO üê∏ v0.8.2 (https://fiko.rokma.rocks)
* 2024 BLACK & WHITE CSS FRAMEWORK LIBRARY
* Copyright 2023 Toybreaker
* MIT License | https: //github.com/toybreaker/fiko
*
* WHY? TLDR:
* DYNAMIC SIZING: via  svh, svw, rem, ch...
* FIXED SIZING: px
* FOLLOWS SEMANTIC HTML
* ALMOST CLASSLESS!
*/

/* üê≤ LAYER ORDER */
@layer reset, root, base, roles, toggle, containers, components, classes, support_test;

/* üê≤ RESET */
@layer reset {
  /* THIS LAYER SHOULD STAY FREE OF CSS VARIABLES */
  /* The New CSS Reset */
  *:where(
      :not(
          html,
          iframe,
          canvas,
          img,
          svg,
          video,
          audio
        ):not(svg *, symbol *)
    ) {
    all: unset;
    display: revert;
  }

  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  ::before,
  ::after {
    /* Add text decoration inheritance in all browsers: */
    text-decoration: inherit;
    /* Add vertical alignment inheritance in all browsers: */
    vertical-align: inherit;
  }

  /* Reapply the pointer cursor for anchor tags: */
  a,
  button {
    cursor: revert;
  }

  /* Remove list styles (bullets/numbers): */
  ol,
  ul,
  menu {
    list-style: none;
  }

  /* Manage how images exceed their container: */
  img {
    max-inline-size: 100%;
    max-block-size: 100%;
  }

  /* Removes spacing between cells in tables: */
  table {
    border-collapse: collapse;
  }

  /* Safari: Fix user-select:none on the <body> text input bug */
  input,
  textarea {
    -webkit-user-select: auto;
  }

  /*  Safari: Revert 'white-space' property for textarea elements */
  textarea {
    white-space: revert;
  }

  /* Minimum style to allow to style meter element */
  meter {
    -webkit-appearance: revert;
    appearance: revert;
  }

  /* Preformatted text - use only for this feature */
  :where(pre) {
    all: revert;
  }

  /*Reset default text opacity of input placeholder */
  ::placeholder {
    color: unset;
  }

  /* Remove default dot (‚Ä¢) sign */
  ::marker {
    content: initial;
  }

  /* Fix the feature of 'hidden' attribute.
  display:revert; revert to element instead of attribute */
  :where([hidden]) {
    display: none;
  }

  /*Revert for bug in Chromium browsers
  - fix for the content editable attribute will work properly.
  - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element */
  :where([contenteditable]:not([contenteditable='false'])) {
    -moz-user-modify: read-write;
    -webkit-user-modify: read-write;
    overflow-wrap: break-word;
    -webkit-line-break: after-white-space;
    -webkit-user-select: auto;
  }

  /* Apply back the draggable feature - exist only in Chromium and Safari */
  :where([draggable='true']) {
    -webkit-user-drag: element;
  }

  /* Revert Modal native behavior */
  :where(dialog:modal) {
    all: revert;
  }

  html {
    font-size: 100%;
    -webkit-text-size-adjust: 100%;
    /* maybe needed ?! */
    -moz-text-size-adjust: none;
    -webkit-text-size-adjust: none;
    text-size-adjust: none;

    > * {
      font-size: unset;
    }
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    margin: 0;
    font-size: inherit;
    font-weight: inherit;
  }

  ::-webkit-file-upload-button {
    /* Correct the inability to style clickable types in iOS and Safari. */
    -webkit-appearance: button;
    /* Change font properties to `inherit` in Safari. */
    font: inherit;
  }

  /* remove the gray background on active links in IE 10. */
  pre {
    font-family: monospace, monospace;
    font-size: 1em;
  }
}

/* üê≤ ROOT */
@layer root {
  /* ROOT IS DEVIDED IN 2 SECTIONS:
  MODE-INDIPENDENT
   * 1. all NIGHT-ABLE 'var(--cur...)' needing light/dark versions,
   * 2. variables which won't [MODE-INDIPENDENT].
   * 3. variables which won't [MODE-INDIPENDENT].
   */

  /* SECTION 1 */
  :root {
    /* ICONS FIRST, cos there're reffered in [data-theme...]  */
    --icon-chevron-black: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='black' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");

    --icon-chevron-white: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='white' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");

    /* COLOURS FOR LIGHT/DARK MODES */
    /* '--alpha' CAN BE REDECLARED AS NEEDED: */
    --alpha: 1;
    /* ^NOTE: '--alpha' operate on the base B&W colors.
     * It will cascade down to all colours declarations.
     * Re-declare it carefully and maybe only deep up the tree,
     * like inside the specific element in need of changes */
    --color-white: rgba(255, 255, 255, var(--alpha));
    --color-black: rgba(0, 0, 0, var(--alpha));
  }

  /* SECTION 2 */

  /* INITIALS ASSUMING LIGHT THEME */
  body[data-theme='light'] {
    /* Set the CURRENT colours: */
    --curBG: var(--color-white);
    --curTXT: var(--color-black);
    --curV: var(--icon-chevron-black);
    /* DERIVED: apply the CURRENT colours: */
    background-color: var(--curBG);
    color: var(--curTXT);
  }

  /* DATA-THEME IS SET TO DARK */
  body[data-theme='dark'] {
    /* Set the CURRENT colours: */
    --curBG: var(--color-black);
    --curTXT: var(--color-white);
    --curV: var(--icon-chevron-white);
    /* DERIVED: apply the CURRENT colours: */
    background-color: var(--curBG);
    color: var(--curTXT);
  }

  /* SECTION 3 */
  :root {
    /* MODE-INDIPENDENT CONSTANT COLOURS */
    /* When elements need consistency, not switching colors. */
    --color-light: var(--color-white);
    --color-dark: var(--color-black);

    /* DERIVED VARIABLES, apply the CURRENT colours: */
    --transparent: 50%;

    --curCOLa: color-mix(
      in srgb,
      currentColor,
      transparent var(--transparent)
    );
    --box-shadow: 0 0 0 0.0625rem var(--curCOLa);

    /* DYNAMIC / RELATIVE SIZED spacing & borders */
    --spaceLR: 3.3svw; /* LEFT RIGHT */
    --spaceTB: 1.8svh; /* TOP BOTTOM */
    --rad: 1svw; /* RADIUS */
    --lineH: 1.55; /* LINE HEIGHT */
    --borderS: 0.1svw; /* BORDER SIZE */
    /* --borderS: 1px; */

    /* NOTE: Maybe make DERIVED?: */
    --gap: calc((3.3svw + 1.8svh) / 2);

    /* TRANSITIONS */
    --transition: 0.2s ease-in-out;

    /* TYPOGRAPHY */

    /* SET */
    --font-family-emoji: 'Apple Color Emoji',
      'Segoe UI Emoji', 'Segoe UI Symbol',
      'Noto Color Emoji';
    /* ^NOTE: THIS NEEDS BE SET FIRST */

    /* THEN APPLY IT */
    --font-family: system-ui, 'Segoe UI', Roboto, Helvetica,
      Arial, sans-serif, var(--font-family-emoji);

    --font-family-monospace: ui-monospace, SFMono-Regular,
      'SF Mono', Menlo, Consolas, 'Liberation Mono',
      monospace, var(--font-family-emoji);

    /* VARIABLE BASE FONT SIZE */
    --font-size: clamp(
      1.25rem,
      1.1717rem + 0.4174svw,
      1.85rem
    );

    /* LONG TEXT LINE ARE AHRD TO READ */
    --reading: var(--reading);

    /* UNUSED ICONS */

    --icon-checkbox: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='20 6 9 17 4 12'%3E%3C/polyline%3E%3C/svg%3E");

    --icon-minus: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cline x1='5' y1='12' x2='19' y2='12'%3E%3C/line%3E%3C/svg%3E");

    --icon-date: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Crect x='3' y='4' width='18' height='18' rx='2' ry='2'%3E%3C/rect%3E%3Cline x1='16' y1='2' x2='16' y2='6'%3E%3C/line%3E%3Cline x1='8' y1='2' x2='8' y2='6'%3E%3C/line%3E%3Cline x1='3' y1='10' x2='21' y2='10'%3E%3C/line%3E%3C/svg%3E");

    --icon-time: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='12' cy='12' r='10'%3E%3C/circle%3E%3Cpolyline points='12 6 12 12 16 14'%3E%3C/polyline%3E%3C/svg%3E");

    --icon-search: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='11' cy='11' r='8'%3E%3C/circle%3E%3Cline x1='21' y1='21' x2='16.65' y2='16.65'%3E%3C/line%3E%3C/svg%3E");

    --icon-close: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cline x1='18' y1='6' x2='6' y2='18'%3E%3C/line%3E%3Cline x1='6' y1='6' x2='18' y2='18'%3E%3C/line%3E%3C/svg%3E");

    --icon-loading: url("data:image/svg+xml,%3Csvg fill='none' height='24' width='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg' %3E%3Cstyle%3E g %7B animation: rotate 2s linear infinite; transform-origin: center center; %7D circle %7B stroke-dasharray: 75,100; stroke-dashoffset: -5; animation: dash 1.5s ease-in-out infinite; stroke-linecap: round; %7D @keyframes rotate %7B 0%25 %7B transform: rotate(0deg); %7D 100%25 %7B transform: rotate(360deg); %7D %7D @keyframes dash %7B 0%25 %7B stroke-dasharray: 1,100; stroke-dashoffset: 0; %7D 50%25 %7B stroke-dasharray: 44.5,100; stroke-dashoffset: -17.5; %7D 100%25 %7B stroke-dasharray: 44.5,100; stroke-dashoffset: -62; %7D %7D %3C/style%3E%3Cg%3E%3Ccircle cx='12' cy='12' r='10' fill='none' stroke='currentColor' stroke-width='2' /%3E%3C/g%3E%3C/svg%3E");
  }

  /* breakpoints, boostrap++ */
  --xs: 0;
  --sm: 576px;
  --md: 768px;
  --lg: 992px;
  --xl: 1200px;
  --x2l: 1440px;
  --x3l: 1920px;
  --x4l: 2560px;
  /* end root */

  --modal-overlay-backdrop-filter: var(--curCOLa);
}

/* üê≤ BASE */
@layer base {
  html {
    scroll-behavior: smooth;
    line-height: var(--lineH);
    background-color: var(--curBG);
  }

  body {
    font-size: var(--font-size);
    font-family: var(--font-family);

    @media (max-width: 576px) {
      word-break: keep-all;
      text-wrap: wrap;
    }
  }

  small {
    font-size: 77%;
    line-height: var(--lineH);
  }

  /* TYPOGRAPHY */
  b,
  strong {
    font-weight: bolder;
  }

  sub,
  sup {
    position: relative;
    font-size: 0.75em;
    line-height: 0;
    vertical-align: baseline;
  }

  sub {
    bottom: -0.25em;
  }

  sup {
    top: -0.5em;
  }

  cite {
    font-style: italic;
  }

  address,
  blockquote,
  dl,
  ol,
  p,
  pre,
  table,
  ul {
    margin-block-start: 0;
    margin-block-end: var(--spaceTB);
    color: var(--curTXT);
    font-style: normal;
    font-weight: var(--font-weight);
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    margin-inline: 0;
    margin-block-start: 0;
    margin-block-end: var(--spaceTB);
    color: var(--curTXT);
    font-weight: var(--font-weight);
    font-size: var(--font-size);
    line-height: var(--lineH);
    font-family: var(--font-family);
    max-width: var(--reading);

    word-break: keep-all;
    /* fallback */
    word-break: auto-phrase;
  }

  @supports (text-wrap: balance) {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      /* IMPROVE READABILITY | performance heavy */
      text-wrap: balance;
      /* https://www.youtube.com/watch?v=L9ihWHngk9E */
    }
  }

  h1,
  .h1 {
    /* --font-size: 2rem; */
    --lineH: 1.2;
    --font-size: clamp(2rem, 1.7993rem + 0.8451vw, 2.75rem);
    text-transform: uppercase;
    border-bottom: 0 none !important;
    color: var(--curTXT);

    span {
      opacity: 0.75;
    }
  }

  h2,
  .h2 {
    --lineH: 1.2;
    --font-size: clamp(
      1.8rem,
      1.6261rem + 0.7324vw,
      2.45rem
    );
    text-transform: uppercase;
    color: var(--curTXT);
  }

  h3,
  .h3 {
    --lineH: 1.2;
    --font-size: clamp(
      1.6rem,
      1.4662rem + 0.5634vw,
      2.1rem
    );
    color: var(--curTXT);
  }

  h4,
  .h4 {
    --lineH: 1.2;
    --font-size: clamp(1.4rem, 1.293rem + 0.4507vw, 1.8rem);
    color: var(--curTXT);
  }

  h5,
  .h5 {
    --lineH: 1.2;
    --font-size: clamp(
      1.2rem,
      1.1331rem + 0.2817vw,
      1.45rem
    );
    color: var(--curTXT);
  }

  h6,
  .h6 {
    --lineH: 1.2;
    --font-size: clamp(0.9rem, 0.8732rem + 0.1127vw, 1rem);
    color: var(--curTXT);
  }

  :where(
      article,
      address,
      blockquote,
      dl,
      figure,
      form,
      ol,
      p,
      pre,
      table,
      ul
    )
    ~ :is(h1, h2, h3, h4, h5, h6) {
    margin-block-start: var(--spaceTB);
  }

  p {
    margin-block-end: var(--spaceTB);
  }

  @supports (text-wrap: balance) {
    p {
      text-wrap: balance;
    }
  }

  em {
    font-style: italic;
  }

  hgroup {
    margin-block-end: var(--spaceTB);
  }

  hgroup > * {
    margin-block-start: 0;
    margin-block-end: 0;
  }

  hgroup > *:not(:first-child):last-child {
    font-size: var(--font-size);
    font-family: unset;
  }

  :where(ol, ul) li {
    margin-block-end: calc(var(--spaceTB) * 0.25);
  }

  :where(dl, ol, ul) :where(dl, ol, ul) {
    margin-inline: 0;
    margin-block-start: calc(var(--spaceTB) * 0.25);
    margin-block-end: 0;
  }

  ul li {
    list-style: square;
  }

  mark {
    padding-block: 0.125rem;
    padding-inline: 0.25rem;
    background-color: orange;
    color: var(--curTXT);
    vertical-align: baseline;
  }

  blockquote {
    max-width: var(--reading);
    display: block;
    margin-block: calc(var(--spaceTB) * 4);
    margin-inline: auto;
    padding-block: var(--spaceTB);
    padding-inline: var(--spaceLR);
    border-right: none;
    border-inline-start: var(--borderS) solid
      color-mix(in srgb, currentColor, transparent 50%);
    border-inline-end: none;
  }

  blockquote footer {
    margin-block-start: calc(var(--spaceTB) * 0.5);
    color: var(--curTXT);
    overflow-x: hidden;
    max-width: 100%;
  }

  abbr[title] {
    border-bottom: 1px dotted currentColor;
    text-decoration: none;
    cursor: help;
  }

  ins {
    color: var(--curCOLa);
    text-decoration: none;
  }

  del {
    color: var(--curCOLa);
  }

  ::-moz-selection {
    background-color: var(--curCOLa);
  }

  ::selection {
    background-color: var(--curCOLa);
  }

  /* CODE */
  pre,
  code,
  kbd,
  samp {
    font-size: 0.875em;
    font-family: var(--font-family-monospace);
  }

  pre code {
    font-size: inherit;
    font-family: inherit;
  }

  pre {
    -ms-overflow-style: scrollbar;
    overflow: auto;
  }

  pre,
  code,
  kbd {
    --code-background-color: rgba(133, 133, 133, 0.5);
    border-radius: var(--rad);
    background-color: var(--code-background-color);
    color: var(--curTXT);
    font-weight: var(--font-weight);
    line-height: initial;
    border-radius: 3px;
  }

  code,
  kbd {
    display: inline;
    padding: calc(var(--spaceLR) / 12)
      calc(var(--spaceLR) / 6);
  }

  pre {
    display: block;
    margin-block-end: var(--spaceTB);
    overflow-x: auto;
  }

  pre > code {
    display: block;
    padding: var(--spaceTB) var(--spaceLR);
    background: none;
    line-height: var(--lineH);
  }

  kbd {
    background-color: var(--code-background-color);
    color: var(--code-background-color);
    vertical-align: baseline;
  }

  [hidden],
  template {
    display: none !important;
  }

  canvas {
    display: inline-block;
  }

  /* LOADING  */
  /* USE ([aria-busy=true]) */

  [aria-busy='true']:not(
      input,
      select,
      textarea,
      html
    )::before {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-image: var(--icon-loading);
    background-size: 1rem auto;
    background-repeat: no-repeat;
    content: '';
    vertical-align: -0.125em;
  }

  [aria-busy='true']:not(input, select, textarea, html):not(
      :empty
    )::before {
    -webkit-margin-end: calc(var(--spaceTB) * 0.5);
    margin-inline-end: calc(var(--spaceTB) * 0.5);
  }

  [aria-busy='true']:not(
      input,
      select,
      textarea,
      html
    ):empty {
    text-align: center;
  }

  button[aria-busy='true'],
  [type='submit'][aria-busy='true'],
  [type='button'][aria-busy='true'],
  [type='reset'][aria-busy='true'],
  [role='button'][aria-busy='true'],
  a[aria-busy='true'] {
    pointer-events: none;
  }

  /* ACCESSIBILITY & USER INTERACTION */
  [aria-controls] {
    cursor: pointer;
  }

  [aria-disabled='true'],
  [disabled] {
    cursor: not-allowed;
  }

  [aria-hidden='false'][hidden] {
    display: initial;
  }

  [aria-hidden='false'][hidden]:not(:focus) {
    clip: rect(0, 0, 0, 0);
    position: absolute;
  }

  a,
  area,
  button,
  input,
  label,
  select,
  summary,
  textarea,
  [tabindex] {
    -ms-touch-action: manipulation;
  }

  [dir='rtl'] {
    direction: rtl;
  }

  a[href] {
    min-height: 42px;
    line-height: 42px;
  }

  p {
    max-width: var(--reading);
    margin-inline: auto;
  }
}

/* üê≤ ROLES */
@layer roles {
  /*  Group ([role="group"], [role="search"]) */
  form[role='search'],
  form[role='group'] {
    width: 100%;
  }

  [role='search'] > *:first-child {
    border-top-left-radius: 5rem;
    border-bottom-left-radius: 5rem;
  }

  [role='search'] > *:last-child {
    border-top-right-radius: 5rem;
    border-bottom-right-radius: 5rem;
  }

  [role='search'],
  [role='group'] {
    display: inline-flex;
    position: relative;
    margin-block-end: var(--spaceTB);
    border-radius: var(--rad);
    box-shadow: var(
      --group-box-shadow,
      0 0 0 rgba(0, 0, 0, 0)
    );
    vertical-align: middle;
    transition: box-shadow var(--transition);
  }

  [role='search'] > *,
  [role='search']
    input:not([type='checkbox'], [type='radio']),
  [role='search'] select,
  [role='group'] > *,
  [role='group']
    input:not([type='checkbox'], [type='radio']),
  [role='group'] select {
    position: relative;
    flex: 1 1 auto;
    margin-block-end: 0;
  }

  [role='search'] > *:not(:first-child),
  [role='search']
    input:not([type='checkbox'], [type='radio']):not(
      :first-child
    ),
  [role='search'] select:not(:first-child),
  [role='group'] > *:not(:first-child),
  [role='group']
    input:not([type='checkbox'], [type='radio']):not(
      :first-child
    ),
  [role='group'] select:not(:first-child) {
    margin-inline-start: 0;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  [role='search'] > *:not(:last-child),
  [role='search']
    input:not([type='checkbox'], [type='radio']):not(
      :last-child
    ),
  [role='search'] select:not(:last-child),
  [role='group'] > *:not(:last-child),
  [role='group']
    input:not([type='checkbox'], [type='radio']):not(
      :last-child
    ),
  [role='group'] select:not(:last-child) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  [role='search'] > *:focus,
  [role='search']
    input:not([type='checkbox'], [type='radio']):focus,
  [role='search'] select:focus,
  [role='group'] > *:focus,
  [role='group']
    input:not([type='checkbox'], [type='radio']):focus,
  [role='group'] select:focus {
    z-index: 2;
  }

  [role='search'] button:not(:first-child),
  [role='search'] [type='submit']:not(:first-child),
  [role='search'] [type='reset']:not(:first-child),
  [role='search'] [type='button']:not(:first-child),
  [role='search'] [role='button']:not(:first-child),
  [role='search']
    input:not([type='checkbox'], [type='radio']):not(
      :first-child
    ),
  [role='search'] select:not(:first-child),
  [role='group'] button:not(:first-child),
  [role='group'] [type='submit']:not(:first-child),
  [role='group'] [type='reset']:not(:first-child),
  [role='group'] [type='button']:not(:first-child),
  [role='group'] [role='button']:not(:first-child),
  [role='group']
    input:not([type='checkbox'], [type='radio']):not(
      :first-child
    ),
  [role='group'] select:not(:first-child) {
    margin-inline-start: var(--spaceLR);
  }

  [role='search'] button,
  [role='search'] [type='submit'],
  [role='search'] [type='reset'],
  [role='search'] [type='button'],
  [role='search'] [role='button'],
  [role='group'] button,
  [role='group'] [type='submit'],
  [role='group'] [type='reset'],
  [role='group'] [type='button'],
  [role='group'] [role='button'] {
    width: auto;
  }

  @supports selector(:has(*)) {
    [role='search']:has(
        button:focus,
        [type='submit']:focus,
        [type='button']:focus,
        [role='button']:focus
      ),
    [role='group']:has(
        button:focus,
        [type='submit']:focus,
        [type='button']:focus,
        [role='button']:focus
      ) {
      --group-box-shadow: var(
        --group-box-shadow-focus-with-button
      );
    }

    [role='search']:has(
        input:not([type='submit'], [type='button']):focus,
        select:focus
      ),
    [role='group']:has(
        input:not([type='submit'], [type='button']):focus,
        select:focus
      ) {
      --group-box-shadow: var(--box-shadow);
    }

    [role='search']:has(
        input:not([type='submit'], [type='button']):focus,
        select:focus
      )
      button,
    [role='search']:has(
        input:not([type='submit'], [type='button']):focus,
        select:focus
      )
      [type='submit'],
    [role='search']:has(
        input:not([type='submit'], [type='button']):focus,
        select:focus
      )
      [type='button'],
    [role='search']:has(
        input:not([type='submit'], [type='button']):focus,
        select:focus
      )
      [role='button'],
    [role='group']:has(
        input:not([type='submit'], [type='button']):focus,
        select:focus
      )
      button,
    [role='group']:has(
        input:not([type='submit'], [type='button']):focus,
        select:focus
      )
      [type='submit'],
    [role='group']:has(
        input:not([type='submit'], [type='button']):focus,
        select:focus
      )
      [type='button'],
    [role='group']:has(
        input:not([type='submit'], [type='button']):focus,
        select:focus
      )
      [role='button'] {
      --box-shadow: 0 0 0 var(--curCOLa) var(--curCOLa);
      --box-shadow: 0 0 0 var(--curCOLa) var(--curCOLa);
    }

    [role='search'] button:focus,
    [role='search'] [type='submit']:focus,
    [role='search'] [type='button']:focus,
    [role='search'] [role='button']:focus,
    [role='group'] button:focus,
    [role='group'] [type='submit']:focus,
    [role='group'] [type='button']:focus,
    [role='group'] [role='button']:focus {
      box-shadow: none;
    }
  }

  /**
 * Loading ([aria-busy=true])
 */
  [aria-busy='true']:not(
      input,
      select,
      textarea,
      html
    )::before {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-image: var(--icon-loading);
    background-size: 1rem auto;
    background-repeat: no-repeat;
    content: '';
    vertical-align: -0.125em;
  }

  [aria-busy='true']:not(input, select, textarea, html):not(
      :empty
    )::before {
    -webkit-margin-end: calc(var(--spaceTB) * 0.5);
    margin-inline-end: calc(var(--spaceTB) * 0.5);
  }

  [aria-busy='true']:not(
      input,
      select,
      textarea,
      html
    ):empty {
    text-align: center;
  }

  button[aria-busy='true'],
  [type='submit'][aria-busy='true'],
  [type='button'][aria-busy='true'],
  [type='reset'][aria-busy='true'],
  [role='button'][aria-busy='true'],
  a[aria-busy='true'] {
    pointer-events: none;
  }

  /* Modal (<dialog>)*/
  :root {
    /* --scrollbar-width: 0px; */
  }

  dialog {
    width: inherit;
    min-width: 50svw;
    height: inherit;
    min-height: 50svh;
    display: flex;
    z-index: 999;
    position: fixed;
    top: 25svh;
    right: 25svw;
    bottom: 25svh;
    left: 25svh;
    align-items: center;
    justify-content: center;
    border: 0;
    -webkit-backdrop-filter: var(--curCOLa);
    backdrop-filter: var(--modal-overlay-backdrop-filter);
    background-color: var(--curCOLa);
    color: var(--curBG);
    filter: invert(1);
  }

  dialog article {
    width: 100%;
    max-height: calc(100svh - var(--spaceTB) * 2);
    margin-block: var(--spaceTB);
    margin-inline: var(--spaceLR);
    overflow: auto;
    background-color: var(--curTXT);
    color: var(--curBG);
  }

  @media (min-width: 576px) {
    dialog article {
      max-width: 510px;
    }
  }

  @media (min-width: 768px) {
    dialog article {
      max-width: 700px;
    }
  }

  dialog article > header,
  dialog article > footer {
    padding: calc(var(--spaceTB) * 0.5) var(--spaceLR);
  }

  dialog article > header .close {
    margin: 0;
    margin-inline-start: var(--spaceLR);
    float: right;
  }

  dialog article > footer {
    text-align: right;
  }

  dialog article > footer button,
  dialog article > footer [role='button'] {
    margin-block-end: 0;
  }

  dialog article > footer button:not(:first-of-type),
  dialog
    article
    > footer
    [role='button']:not(:first-of-type) {
    margin-inline-start: calc(var(--spaceLR) * 0.5);
  }

  dialog article .close {
    display: block;
    width: 1rem;
    height: 1rem;
    margin-block-start: calc(var(--spaceTB) * -1);
    margin-block-end: var(--spaceTB);
    margin-inline-start: auto;
    background-image: var(--icon-close);
    background-position: center;
    background-size: auto 1rem;
    background-repeat: no-repeat;
    opacity: 0.5;
    transition: opacity var(--transition);
  }

  dialog
    article
    .close:is([aria-current], :hover, :active, :focus) {
    opacity: 1;
  }

  dialog:not([open]),
  dialog[open='false'] {
    display: none;
  }

  .modal-is-open {
    padding-inline-end: var(--scrollbar-width, 0px);
    overflow: hidden;
    pointer-events: none;
    touch-action: none;
  }

  .modal-is-open dialog {
    pointer-events: auto;
    touch-action: auto;
  }

  :where(.modal-is-opening, .modal-is-closing) dialog,
  :where(.modal-is-opening, .modal-is-closing)
    dialog
    > article {
    animation-duration: 0.2s;
    animation-timing-function: ease-in-out;
    animation-fill-mode: both;
  }

  :where(.modal-is-opening, .modal-is-closing) dialog {
    animation-duration: 0.8s;
    animation-name: modal-overlay;
  }

  :where(.modal-is-opening, .modal-is-closing)
    dialog
    > article {
    animation-delay: 0.2s;
    animation-name: modal;
  }

  .modal-is-closing dialog,
  .modal-is-closing dialog > article {
    animation-delay: 0s;
    animation-direction: reverse;
  }

  @keyframes modal-overlay {
    from {
      -webkit-backdrop-filter: none;
      backdrop-filter: none;
      background-color: transparent;
    }
  }

  @keyframes modal {
    from {
      transform: translateY(-100%);
      opacity: 0;
    }
  }
}

/* üê≤ TOGGLE */
@layer toggle {
  .theme_switch {
    position: relative;
    top: 4px;
    z-index: 1000;
    line-height: 1;

    :hover svg {
      color: var(--curTXT);
    }

    [data-theme='dark'] & {
      .moon {
        display: none;
      }
    }

    [data-theme='light'] & {
      .sun {
        display: none;
      }
    }
  }
}

/* üê≤ CONTAINERS */
@layer containers {
  header,
  nav,
  section,
  footer {
    background-color: var(--curBG);
    color: var(--curTXT);
  }

  /* NAV */
  /* :where(nav li)::before {
    float: left;
    content: '‚Äã';
  } */

  nav,
  nav ul {
    padding-inline: calc(var(--spaceLR) * 2);
    gap: var(--gap);
    margin: 0;
  }

  nav {
    width: 100%;
  }

  nav ol,
  nav ul {
    align-items: center;
    margin-block-end: 0;
    padding: 0;
    list-style: none;
  }

  nav ol:first-of-type,
  nav ul:first-of-type {
    margin-inline-start: var(--spaceLR);
  }

  nav ol:last-of-type,
  nav ul:last-of-type {
    margin-inline-end: var(--spaceLR);
  }

  nav li {
    display: inline-block;
    margin: 0;
  }

  nav li :where(a, [role='link']) {
    display: inline-block;
    border-radius: var(--rad);
  }

  nav li :where(a, [role='link']):not(:hover) {
    text-decoration: none;
  }

  nav li button,
  nav li [role='button'],
  nav
    li
    input:not(
      [type='checkbox'],
      [type='radio'],
      [type='range'],
      [type='file']
    ),
  nav li select {
    height: auto;
    margin-inline-end: inherit;
    margin-block-end: 0;
    margin-inline-start: inherit;
    padding: var(--spaceTB) var(--spaceLR);
  }

  nav[aria-label='breadcrumb'] {
    align-items: center;
    justify-content: start;
  }

  nav[aria-label='breadcrumb'] ul li:not(:first-child) {
    -webkit-margin-start: var(--spaceLR);
    margin-inline-start: var(--spaceLR);
  }

  nav[aria-label='breadcrumb']
    ul
    li:not(:last-child)::after {
    position: absolute;
    width: calc(var(--spaceLR) * 2);
    -webkit-margin-start: calc(var(--spaceLR) / 2);
    margin-inline-start: calc(var(--spaceLR) / 2);
    content: var(--nav-breadcrumb-divider);
    color: var(--curCOLa);
    text-align: center;
    text-decoration: none;
  }

  nav[aria-label='breadcrumb'] a[aria-current] {
    background-color: transparent;
    color: inherit;
    text-decoration: none;
    pointer-events: none;
  }

  /* TABLE */
  :where(table) {
    width: 100%;
    border-collapse: collapse;
    border-spacing: 0;
    text-indent: 0;
  }

  th,
  td {
    padding: calc(var(--spaceTB) / 2) var(--spaceLR);
    width: fit-content;
    border-bottom: var(--curCOLa) solid var(--borderS);
    background-color: var(--curBG);
    color: var(--curTXT);
    font-weight: var(--font-weight);
    text-align: left;
    text-align: start;
  }

  tfoot th,
  tfoot td {
    border-top: var(--curCOLa) solid var(--borderS);
    border-bottom: 0;
    font-weight: 500;
  }

  th[scope='row'] {
    white-space: nowrap;
  }

  table.striped tbody tr:nth-child(odd) th,
  table.striped tbody tr:nth-child(odd) td {
    background-color: color-mix(
      in srgb,
      currentColor,
      transparent 90%
    );
  }

  img {
    height: auto;
    border-style: none;
    vertical-align: middle;
    object-fit: cover;
  }

  :where(svg:not([fill])) {
    fill: currentColor;
  }

  /* maybe also stroke*/
  :where(svg:not([stroke])) {
    stroke: currentColor;
  }

  svg:not(:root) {
    overflow: hidden;
  }

  aside {
    nav,
    ol,
    ul,
    li {
      display: block;
    }

    li {
      padding: calc(var(--spaceTB) * 0.5) var(--spaceLR);
    }

    li a {
      display: block;
    }

    li [role='button'] {
      margin: inherit;
    }
  }

  section {
    margin-block-end: var(--spaceTB);
  }

  /* GRID | Minimal grid system with auto-layout columns */

  .grid_box {
    container: card / inline-size;
  }

  .grid {
    display: grid;
    gap: var(--gap);
    grid-template-columns: repeat(
      auto-fit,
      minmax(300px, 1fr)
    );
    align-items: center;
    justify-items: center;
    margin: 0;

    > * {
      align-self: stretch;
    }
  }
}

/* HORIZONTAL scroller (<figure>) */
figure {
  display: block;
  margin: 0;
  padding: 0;
  overflow-x: auto;

  /* For big images lets limit the size/scroll: */
  img {
    max-inline-size: 200%;
  }

  figcaption {
    padding-block: var(--spaceTB);
    padding-inline: var(--spaceLR);
    color: var(--curCOLa);
  }

  figcaption::first-letter {
    text-transform: uppercase;
  }
}

/* üê≤ CONTAINED COMPONENTS */

@layer components {
  hr {
    height: 0;
    margin-block: var(--spaceTB);
    margin-inline: 0;
    border: 0;
    border-top: 1px solid currentColor;
  }

  /* Button v2*/
  button {
    margin: 0;
    overflow: visible;
    font-family: inherit;
    text-transform: none;
  }

  button,
  [type='submit'],
  [type='reset'],
  [type='button'] {
    -webkit-appearance: button;
  }

  button,
  [type='submit'],
  [type='reset'],
  [type='button'],
  [type='file']::file-selector-button,
  [role='button'] {
    --box-shadow: var(--box-shadow, 0 0 0 rgba(0, 0, 0, 0));
    padding: 2% var(--spaceLR);
    border: var(--borderS) solid var(--curCOLa);
    border-radius: var(--rad);
    outline: none;
    color: var(--curTXT);
    box-shadow: var(--box-shadow);
    font-weight: var(--font-weight);
    font-size: var(--font-size);
    line-height: var(--lineH);
    text-align: center;
    text-decoration: none;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    transition: background-color var(--transition),
      border-color var(--transition),
      color var(--transition), box-shadow var(--transition);
  }

  button:is([aria-current], :hover, :active, :focus),
  [type='submit']:is(
      [aria-current],
      :hover,
      :active,
      :focus
    ),
  [type='reset']:is(
      [aria-current],
      :hover,
      :active,
      :focus
    ),
  [type='button']:is(
      [aria-current],
      :hover,
      :active,
      :focus
    ),
  [type='file']::file-selector-button:is(
      [aria-current],
      :hover,
      :active,
      :focus
    ),
  [role='button']:is(
      [aria-current],
      :hover,
      :active,
      :focus
    ) {
    --background-color: var(--curTXT);
    --curCOLa: var(--curCOLa);
    --box-shadow: var(--box-shadow, 0 0 0 rgba(0, 0, 0, 0));
    color: var(--curBG);
  }

  button:focus,
  [type='submit']:focus,
  [type='reset']:focus,
  [type='button']:focus,
  [type='file']::file-selector-button:focus,
  [role='button']:focus {
    --box-shadow: var(--box-shadow, 0 0 0 rgba(0, 0, 0, 0)),
      0 0 0 var(--outline-width) var(--curCOLa);
  }

  [type='submit'],
  [type='reset'],
  [type='button'] {
    margin-block-end: var(--spaceTB);
  }

  :is(
      button,
      [type='submit'],
      [type='button'],
      [role='button']
    ).secondary,
  [type='reset'],
  [type='file']::file-selector-button {
    --curCOLa: var(--curCOLa);
    --background-color: var(--curBG);
    color: var(--curTXT);
    cursor: pointer;
  }

  :is(
      button,
      [type='submit'],
      [type='button'],
      [role='button']
    ).secondary:is([aria-current], :hover, :active, :focus),
  [type='reset']:is(
      [aria-current],
      :hover,
      :active,
      :focus
    ),
  [type='file']::file-selector-button:is(
      [aria-current],
      :hover,
      :active,
      :focus
    ) {
    --curCOLa: var(--curCOLa);
    --background-color: var(--curBG);
    color: var(--curTXT);
  }

  :is(
      button,
      [type='submit'],
      [type='button'],
      [role='button']
    ).secondary:focus,
  [type='reset']:focus,
  [type='file']::file-selector-button:focus {
    --box-shadow: var(--box-shadow, 0 0 0 rgba(0, 0, 0, 0)),
      0 0 0 var(--outline-width) var(--curCOLa);
  }

  :is(
      button,
      [type='submit'],
      [type='button'],
      [role='button']
    ).contrast {
    --background-color: var(--curTXT);
    --curCOLa: var(--curBG);
    --color: var(--curBG);
  }

  :is(
      button,
      [type='submit'],
      [type='button'],
      [role='button']
    ).contrast:is([aria-current], :hover, :active, :focus) {
    --curCOLa: var(--curCOLa);
    --background-color: var(--curBG);
    --color: var(--curTXT);
  }

  :is(
      button,
      [type='submit'],
      [type='button'],
      [role='button']
    ).contrast:focus {
    --box-shadow: var(--box-shadow, 0 0 0 rgba(0, 0, 0, 0)),
      0 0 0 var(--outline-width) var(--curCOLa);
  }

  :is(
      button,
      [type='submit'],
      [type='button'],
      [role='button']
    ).outline,
  [type='reset'].outline {
    border: var(--borderS) solid currentColor;
    background-color: transparent;
    color: var(--curTXT);
  }

  :is(
      button,
      [type='submit'],
      [type='button'],
      [role='button']
    ).outline:is([aria-current], :hover, :active, :focus),
  [type='reset'].outline:is(
      [aria-current],
      :hover,
      :active,
      :focus
    ) {
    border: var(--borderS) solid currentColor;
    background-color: transparent;
    color: var(--curTXT);
  }

  :is(
      button,
      [type='submit'],
      [type='button'],
      [role='button']
    ).outline.secondary,
  [type='reset'].outline {
    border: var(--borderS) solid currentColor;
    background-color: transparent;
    color: var(--curTXT);
  }

  :is(
      button,
      [type='submit'],
      [type='button'],
      [role='button']
    ).outline.secondary:is(
      [aria-current],
      :hover,
      :active,
      :focus
    ),
  [type='reset'].outline:is(
      [aria-current],
      :hover,
      :active,
      :focus
    ) {
    border: var(--borderS) solid currentColor;
    background-color: transparent;
    color: var(--curTXT);
  }

  :is(
      button,
      [type='submit'],
      [type='button'],
      [role='button']
    ).outline.contrast {
    border: var(--borderS) solid currentColor;
    background-color: transparent;
    color: var(--curTXT);
  }

  :is(
      button,
      [type='submit'],
      [type='button'],
      [role='button']
    ).outline.contrast:is(
      [aria-current],
      :hover,
      :active,
      :focus
    ) {
    border: var(--borderS) solid currentColor;
    background-color: transparent;
    color: var(--curTXT);
  }

  :where(
      button,
      [type='submit'],
      [type='reset'],
      [type='button'],
      [role='button']
    )[disabled],
  :where(fieldset[disabled])
    :is(
      button,
      [type='submit'],
      [type='button'],
      [type='reset'],
      [role='button']
    ) {
    opacity: 0.5;
    pointer-events: none;
  }

  /* ACCORDION */
  /* USE: <details> and <summary> */

  details {
    display: block;
    margin-block-end: var(--spaceTB);
    border-bottom: var(--borderS) solid currentColor;

    & summary {
      line-height: 2;
      list-style-type: none;
      cursor: pointer;
      transition: color var(--transition);
      border-bottom: 1px solid currentColor;
      display: block;

      & :not([role]) {
        color: var(--curTXT);
      }

      /* EXPOSE STATUS TO DOM: Closed */
      .status::after {
        display: inline;
        content: 'Closed';
      }

      & ::-webkit-details-marker {
        display: none;
      }

      & ::marker {
        display: none;
      }

      & ::-moz-list-bullet {
        list-style-type: none;
      }

      & :focus {
        outline: none;

        /* NO SAFARI OUTLINE DECORATION */
        & :not([role]) {
          outline: 4px solid var(--curCOLa);
          outline-offset: 1ch;
          color: var(--curTXT);
        }
      }

      & [role='button'] {
        width: 100%;
        text-align: left;

        & ::after {
          height: calc(1rem * var(--lineH));
        }
      }
    }

    /* summary:focus-visible:not([role]) {
      outline: var(--borderS) solid var(--curCOLa);
      outline-offset: 1ch;
      color: var(--curTXT);
    } */
  }

  /* INDICATOR ARROW */
  summary::after {
    content: '';
    display: block;
    width: 1.25ch;
    /* height: calc(1rem * var(--lineH)); */
    height: 2ch;
    -webkit-margin-start: calc(var(--spaceTB) * 0.5);
    margin-inline-start: calc(var(--spaceTB) * 0.5);
    float: right;
    background-position: center;
    background-size: 2rem auto;
    background-repeat: no-repeat;
    top: 8px;
    background-image: var(--curV);
    transition: transform var(--transition);
    transform: rotate(0);
  }

  details[open] > summary {
    //margin-block-end: var(--spaceTB);
    position: -webkit-sticky !important;
    /* Safari */
    position: sticky;
    border-bottom: var(--borderS) solid currentColor;
    background-color: var(--curBG);
    top: 0;

    /* EXPOSE STATUS TO DOM: Open  */
    .status::after {
      display: inline;
      content: 'Open';
    }
  }

  /* NOT WORKING */
  details[open] > summary::after {
    transform: rotate(180deg);
  }

  details[open] > summary:not([role]):not(:focus) {
    color: var(--curTXT);
  }

  /* HEADINGS, P, SPAN */
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  span {
    --spaceTB: 0.5ch;
    padding: var(--spaceTB) 0;
  }

  h1 {
    font-size: calc(var(--font-size) * 2.25);
  }

  h2 {
    font-size: calc(var(--font-size) * 1.65);
  }

  h3 {
    font-size: calc(var(--font-size) * 1.5);
  }

  h4 {
    font-size: calc(var(--font-size) * 1.25);
  }

  h5 {
    font-size: calc(var(--font-size) * 1.15);
  }

  h6 {
    /* font-size: calc(var(--font-size) * 1.1); */
  }

  /* LIST */
  ul,
  ol {
    list-style-type: none;
    /* li {
    padding: calc(var(--spaceTB) / 2) 0;
  } */
  }

  /* CARD */
  /* USE: <article> */

  article {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: start;
    gap: 10px;
    margin-block: var(--spaceTB);
    margin-inline: var(--spaceLR);
    /*
    &:not(:has(header)) {
       padding-top: var(--spaceTB);
    }
    */
    &:not(:has(footer)) {
      padding-bottom: var(--spaceTB);
    }

    > * {
      text-align: center;
      margin-block: 0;
      /* padding-block: var(--spaceTB) / 3; */
      padding-inline: calc(var(--spaceLR) / 2);
      alignment-baseline: text-before-edge;
    }

    > header,
    > footer {
      width: 100%;
      padding-block: var(--spaceTB);
      background-color: color-mix(
        in srgb,
        currentColor,
        transparent 90%
      );
    }

    /* button {
      display: block;
      padding-block: var(--spaceTB);
      padding-inline: var(--spaceLR);
      margin-block: var(--spaceTB);
      margin-inline: var(--spaceLR);
      border: var(--curCOLa) 1px solid;
      border-radius: var(--rad);
      background-color: var(--curTXT);
      color: var(--curBG); */
    /* before font-size: unset, it went to 13px somehow, gosh */
    /* font-size: unset;
    }*/
  }

  &:only-child {
    padding-top: 0;
    margin-block-start: 0;
    padding-bottom: 0;
    margin-block-end: 0;
  }
}

/*!
* WHEN <article> IS USED TO CENTER CONTENT
* SAY INSIDE A <section>,
* IT WILL HAVE NO VERTICAL PADDING.
*/

article:only-child {
  padding-top: 0;
  margin-block-start: 0;
  padding-bottom: 0;
  margin-block-end: 0;
}

/* üê≤ CLASSES */
@layer classes {
  /*!
  * YOU CAN STYLE THE <article>
  * to have diffentr shapes at different width.
  * give it a class (.rows) here then
  * do something like this:
  */
  @layer containers {
    /* what's the use case for nesting @layers ? */
  }

  .sticky {
    position: -webkit-sticky;
    position: sticky;
    top: 10px;
    z-index: 9999;
    background-color: var(--curCOLa) !important;
    backdrop-filter: blur(10px);
    height: fit-content;
  }

  .pad {
    padding-inline: var(--spaceLR);
    padding-block: var(--spaceTB);
  }

  .o,
  .centered,
  .center,
  .centre {
    text-align: center !important;
  }

  .border {
    border: var(--borderS) solid
      color-mix(in srgb, currentColor, transparent 50%);
    border-radius: var(--rad);

    header {
      border-top-left-radius: var(--rad);
      border-top-right-radius: var(--rad);
    }

    /* THIS FOR ARTICLE CARDS */
    footer {
      border-bottom-left-radius: var(--rad);
      border-bottom-right-radius: var(--rad);
    }
  }

  .container {
    margin-inline: 5%;
  }

  .invert {
    filter: invert(100%);
    webkitfilter: invert(100%);
    mozfilter: invert(100%);
    backdrop-filter: hue-rotate(180deg);
  }

  @container (min-width: 600px) {
    article.rows {
      display: grid;
      grid-template-columns: 300px 1.4fr;
      grid-template-rows: 1fr 3fr 1fr;
      gap: 0px 0px;
      grid-auto-flow: row;
      grid-template-areas:
        'img header'
        'img body'
        'img footer';
    }

    img {
      /* grid-area: img; */
      /* width: 20em; */
    }

    header {
      grid-area: header;
    }

    footer {
      grid-area: footer;
    }

    :not(header),
    :not(footer) {
      /* grid-area: body; */
    }
  }

  @supports (text-wrap: balance) {
    .balance,
    .balance > * {
      text-wrap: balance;
    }
  }
}

@layer support_test {
  /* Style warning block */
  .no-support {
    margin: 1em 0;
    padding: 1em;
    border: 1px solid #ccc;
    background-color: #ff00002b;
    display: block;
  }

  /* Hide warning block in case :has() support is detected */
  @supports selector(:has(*)) {
    .no-support {
      display: none;
    }
  }
}
