@charset "UTF-8";
/*!
 * FIKO 🐸 v0.5.6 (https://fiko.rokma.rocks)
 * 2024 CLASSLESS BLACK & WHITE CSS FRAMEWORK LIBRARY
 * MIT License | https: //github.com/toybreaker/fiko
 * Copyright 2023 Toybreaker - Licensed under MIT
 */


/* ||| Layer Order Declaration ||| */
@layer reset, root, toggle, containers, components;

/* ||| Base Layer ||| */
@layer reset {

  /* Basic Resets */
  *,
  *::before,
  *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  html {
    font-size: 100%;
    line-height: 1.15;
    -webkit-text-size-adjust: 100%;

    >* {
      font-size: unset;
    }
  }

  ::-webkit-file-upload-button {
    /* Correct the inability to style clickable types in iOS and Safari. */
    -webkit-appearance: button;
    /* Change font properties to `inherit` in Safari. */
    font: inherit;
  }

  /* remove the gray background on active links in IE 10. */
  pre {
    font-family: monospace, monospace;
    font-size: 1em;
  }



  a {
    background-color: transparent;
  }




  button,
  [role=button],
  input[type=button],
  input[type=reset],
  input[type=submit] {
    --background-color: var(--current-bg);
    --border-color: var(--current-text);
    --color: var(--current-text);
    --box-shadow: var(--button-box-shadow, 0 0 0 rgba(0, 0, 0, 0));
    padding: var(--form-element-spacing-vertical) var(--form-element-spacing-horizontal);
    border: var(--border) solid var(--border-color);
    border-radius: var(--border-radius);
    outline: 0;
    background-color: var(--background-color);
    box-shadow: var(--box-shadow);
    color: var(--color);
    font-weight: var(--font-weight);
    font-size: 1rem;
    line-height: var(--line-height);
    text-align: center;
    cursor: pointer;
    transition: background-color var(--transition), border-color var(--transition), color var(--transition), box-shadow var(--transition);
  }
}

/* ||| Root Declarations ||| */
@layer root {
  :root {
    --color-white: #ffffff;
    --color-black: #000000;
    --light-mode: var(--color-white);
    --dark-mode: var(--color-black);
    --font-size: clamp(1.25rem, 1.1717rem + 0.4174vw, 1.85rem);
    --padding: 1dvh;
    --paddingLR: 5dvw;
    --paddingTB: 3dvh;
    --border: 1px;
    --border-color: var(--current-text);
    --radius: 5px;
    --space: 1rem;
    --transition: 0.2s ease-in-out;

    --font-family: system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, var(--font-family-emoji);
    --font-family-monospace: ui-monospace, SFMono-Regular, "SF Mono", Menlo, Consolas, "Liberation Mono", monospace, var(--font-family-emoji);
    --font-family-emoji: "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";

    /* ICONS */


    --icon-checkbox: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='rgb(255, 255, 255)' stroke-width='4' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='20 6 9 17 4 12'%3E%3C/polyline%3E%3C/svg%3E");
    --icon-minus: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='rgb(255, 255, 255)' stroke-width='4' stroke-linecap='round' stroke-linejoin='round'%3E%3Cline x1='5' y1='12' x2='19' y2='12'%3E%3C/line%3E%3C/svg%3E");
    --icon-chevron: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='rgb(136, 145, 164)' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
    --icon-date: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='rgb(136, 145, 164)' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Crect x='3' y='4' width='18' height='18' rx='2' ry='2'%3E%3C/rect%3E%3Cline x1='16' y1='2' x2='16' y2='6'%3E%3C/line%3E%3Cline x1='8' y1='2' x2='8' y2='6'%3E%3C/line%3E%3Cline x1='3' y1='10' x2='21' y2='10'%3E%3C/line%3E%3C/svg%3E");
    --icon-time: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='rgb(136, 145, 164)' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='12' cy='12' r='10'%3E%3C/circle%3E%3Cpolyline points='12 6 12 12 16 14'%3E%3C/polyline%3E%3C/svg%3E");
    --icon-search: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='rgb(136, 145, 164)' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='11' cy='11' r='8'%3E%3C/circle%3E%3Cline x1='21' y1='21' x2='16.65' y2='16.65'%3E%3C/line%3E%3C/svg%3E");
    --icon-close: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='rgb(136, 145, 164)' stroke-width='3' stroke-linecap='round' stroke-linejoin='round'%3E%3Cline x1='18' y1='6' x2='6' y2='18'%3E%3C/line%3E%3Cline x1='6' y1='6' x2='18' y2='18'%3E%3C/line%3E%3C/svg%3E");
    --icon-loading: url("data:image/svg+xml,%3Csvg fill='none' height='24' width='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg' %3E%3Cstyle%3E g %7B animation: rotate 2s linear infinite; transform-origin: center center; %7D circle %7B stroke-dasharray: 75,100; stroke-dashoffset: -5; animation: dash 1.5s ease-in-out infinite; stroke-linecap: round; %7D @keyframes rotate %7B 0%25 %7B transform: rotate(0deg); %7D 100%25 %7B transform: rotate(360deg); %7D %7D @keyframes dash %7B 0%25 %7B stroke-dasharray: 1,100; stroke-dashoffset: 0; %7D 50%25 %7B stroke-dasharray: 44.5,100; stroke-dashoffset: -17.5; %7D 100%25 %7B stroke-dasharray: 44.5,100; stroke-dashoffset: -62; %7D %7D %3C/style%3E%3Cg%3E%3Ccircle cx='12' cy='12' r='10' fill='none' stroke='rgb(136, 145, 164)' stroke-width='4' /%3E%3C/g%3E%3C/svg%3E");

  }

  body {
    font-size: var(--font-size);
    font-family: var(--font-family);
  }

  /* Initial styles assuming light theme */
  body[data-theme="light"] {
    /* set the logic: */
    --current-bg: var(--light-mode);
    --current-text: var(--color-black);
    /* use the following: */
    background-color: var(--current-bg);
    color: var(--current-text);
  }

  /* When data-theme is set to dark */
  body[data-theme="dark"] {
    /* set the logic: */
    --current-bg: var(--dark-mode);
    --current-text: var(--color-white);
    /* use the following: */
    background-color: var(--current-bg);
    color: var(--current-text);
  }
}

/* :root {
  --border-color: var(--current-text);
} */

/* ||| Toggle Layer ||| */
@layer toggle {
  :root {
    --spacing: 1rem;
  }

  .switcher {
    position: fixed;
    right: var(--spacing);
    bottom: var(--spacing);
    width: auto;
    padding: 0.75rem;
    margin-bottom: 0;
    border-radius: 2rem;
    line-height: 1;
    text-align: right;
  }



  .switcher:hover::after {
    transform: rotate(180deg);
  }

  .switcher::after {
    display: inline-block;
    width: 1.5rem;
    height: 1.5rem;
    border: 0.15rem solid currentColor;
    border-radius: 50%;
    background: linear-gradient(to right, currentColor 0, currentColor 50%, transparent 50%);
    content: "";
    vertical-align: bottom;
    transition: transform var(--transition);
  }

  .switcher:focus,
  .switcher:hover {
    max-width: 100%;
    transition: background-color var(--transition), border-color var(--transition), color var(--transition), box-shadow var(--transition);
  }

  .switcher:focus,
  .switcher:hover {
    max-width: 100%;
    transition: background-color var(--transition), border-color var(--transition), color var(--transition), box-shadow var(--transition);
  }

  .switcher i {
    display: inline-block;
    max-width: 0;
    padding: 0;
    overflow: hidden;
    font-style: normal;
    font-size: revert;
    white-space: nowrap;
    pointer-events: none;
  }



  .switcher:hover i {
    cursor: pointer;
    max-width: 100%;
    padding: 0 calc(var(--spacing)/ 2) 0 calc(var(--spacing)/ 4);
    transition: max-width var(--transition), padding var(--transition);
  }

  .switcher label:hover {
    cursor: pointer;
  }

  #theme-toggle {
    display: none;
  }
}

/* ||| Container Elements Layer ||| */
@layer containers {

  header,
  nav,
  section,
  footer {
    background-color: var(--current-bg);
    color: var(--current-text);
  }

  nav,
  header,
  footer {
    padding: var(--paddingTB) var(--paddingLR);
  }

  .container {
    margin-left: calc(var(--paddingLR) * 1.5);
    margin-right: calc(var(--paddingLR) * 1.5);
  }

  img {
    max-width: 100%;
  }

  aside {
    /* soon */
  }

  article {
    /* soon */
  }




}

/* ||| Contained Elements Layer ||| */
@layer components {



  /* Accordion (<details>) */
  summary {
    line-height: 3;
    list-style-type: none;
    cursor: pointer;
    transition: color var(--transition);
  }

  details {
    display: block;
    margin-bottom: var(--spacing);
    border-bottom: var(--border) solid var(--current-text);


    summary:not([role]) {
      color: var(--current-text);
    }

    summary::-webkit-details-marker {
      display: none;
    }

    summary::marker {
      display: none;
    }

    summary::-moz-list-bullet {
      list-style-type: none;
    }

    summary::after {
      display: block;
      width: 1rem;
      height: 1rem;
      -webkit-margin-start: calc(var(--spacing) * 0.5);
      margin-inline-start: calc(var(--spacing) * 0.5);
      float: right;
      transform: rotate(-90deg);
      background-image: var(--icon-chevron);
      background-position: right center;
      background-size: 1rem auto;
      background-repeat: no-repeat;
      content: "";
      transition: transform var(--transition);
    }

    summary:focus {
      outline: none;
    }

    summary:focus:not([role]) {
      color: var(--current-text);
    }

    summary:focus-visible:not([role]) {
      outline: var(-border) solid var(--current-text);
      outline-offset: calc(var(--spacing) * 0.5);
      color: var(--current-text);
    }

    summary[role=button] {
      width: 100%;
      text-align: left;
    }

    summary[role=button]::after {
      height: calc(1rem * var(--line-height));
    }

  }


  details[open]>summary {
    margin-bottom: var(--spacing);
  }

  details[open]>summary:not([role]):not(:focus) {
    color: var(--accordion-open-summary-color);
  }

  details[open]>summary::after {
    transform: rotate(0);
  }


  /* Headings, P, Span */
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  span {
    padding: var(--paddingTB) 0;
  }

  /* List */
  ul,
  ol {
    list-style-type: none;
  }

  li {
    padding: calc(var(--paddingTB)/2) 0;
  }

  /* Card */
  article {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    >* {
      text-decoration: none;
    }
  }

  article img {
    max-width: 100%;
  }

  article button {
    display: block;
    padding: var(--paddingTB) var(--paddingLR);
    border: var(--border) 1px solid;
    border-radius: var(--radius);
    background-color: var(--current-text);
    color: var(--current-bg);
    /* before font-size: unset, it went to 13px somehow, gosh  */
    font-size: unset;
  }

  .container article {
    padding: var(--paddingTB) var(--paddingLR);
    border: 1px solid var(--current-text);
  }
}